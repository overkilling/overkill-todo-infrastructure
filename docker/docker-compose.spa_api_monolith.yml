version: '3.4'

x-fluentd-logging:
  &fluentd-logging
  driver: fluentd
  options:
    fluentd-address: localhost:24224
    fluentd-async-connect: 'true'

services:
  spa:
    image: docker.pkg.github.com/overkilling/overkill-todo-spa-frontend/spa:${SPA_VERSION:?err}
    ports:
      - "80:80"
    expose:
      - "80"
    depends_on:
      - api
      - fluentd
    networks:
      - todo
    logging:
      << : *fluentd-logging
      options:
        tag: spa

  api:
    image: docker.pkg.github.com/overkilling/overkill-todo-monolith-api/api:${API_VERSION:?err}
    environment:
      DB_HOST: db
    ports:
      - "3000:3000"
    expose:
      - "3000"
    depends_on:
      - db
      - fluentd
    networks:
      - todo
    # logging:
    #   << : *fluentd-logging
    #   options:
    #     tag: api

  db:
    image: postgres:latest
    ports:
      - "5432:5432"
    expose:
      - "5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    depends_on:
      - fluentd
    networks:
      - todo
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: todo
    restart: on-failure
    logging:
      << : *fluentd-logging
      options:
        tag: db

  fluentd:
    build: ./fluentd
    depends_on:
      - elasticsearch
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    volumes:
      - ./fluentd/etc:/fluentd/etc
    networks:
      - todo

  elasticsearch:
    image: elasticsearch:7.7.1
    environment:
      - discovery.type=single-node
    expose:
      - 9200
    ports:
      - "9200:9200"
    networks:
      - todo

  kibana:
    image: kibana:7.7.1
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - todo

  prometheus:
    image: prom/prometheus
    expose:
      - 9090
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    networks:
      - todo

  db-metrics:
    image: wrouesnel/postgres_exporter:v0.8.0
    depends_on:
      - db
    restart: always
    environment:
      - DATA_SOURCE_URI=db:5432/todo?sslmode=disable
      - DATA_SOURCE_USER=postgres
      - DATA_SOURCE_PASS=postgres
    ports:
      - "9187:9187"
    networks:
      - todo

volumes:
  pgdata:

networks:
  todo:
